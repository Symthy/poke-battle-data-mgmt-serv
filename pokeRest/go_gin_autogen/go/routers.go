/*
 * PokeRest
 *
 * PokeRest API
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/PokeRest/",
		Index,
	},

	{
		"GetAbilities",
		http.MethodGet,
		"/PokeRest/abilities",
		GetAbilities,
	},

	{
		"GetAbilitiesId",
		http.MethodGet,
		"/PokeRest/abilities/:avilityId",
		GetAbilitiesId,
	},

	{
		"GetMoves",
		http.MethodGet,
		"/PokeRest/moves",
		GetMoves,
	},

	{
		"GetMovesId",
		http.MethodGet,
		"/PokeRest/moves/:moveId",
		GetMovesId,
	},

	{
		"GetPokemonAvilities",
		http.MethodGet,
		"/PokeRest/pokemons/avilities/:pokemonId",
		GetPokemonAvilities,
	},

	{
		"GetPokemonMovesPokemonId",
		http.MethodGet,
		"/PokeRest/pokemons/moves/:pokemonId",
		GetPokemonMovesPokemonId,
	},

	{
		"GetPokemons",
		http.MethodGet,
		"/PokeRest/pokemons",
		GetPokemons,
	},

	{
		"GetPokemonsId",
		http.MethodGet,
		"/PokeRest/pokemons/:pokemonId",
		GetPokemonsId,
	},

	{
		"GetTypeCompabilityDefenseType",
		http.MethodGet,
		"/PokeRest/types/compability/defense/:type",
		GetTypeCompabilityDefenseType,
	},

	{
		"GetTypeCompabilityType",
		http.MethodGet,
		"/PokeRest/types/compability/attack/:type",
		GetTypeCompabilityType,
	},

	{
		"GetTypes",
		http.MethodGet,
		"/PokeRest/types",
		GetTypes,
	},

	{
		"GetTypesCompability",
		http.MethodGet,
		"/PokeRest/types/compability",
		GetTypesCompability,
	},
}
