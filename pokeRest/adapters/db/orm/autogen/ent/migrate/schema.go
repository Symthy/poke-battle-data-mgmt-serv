// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AbilitiesColumns holds the columns for the "abilities" table.
	AbilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "physical_move_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_move_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "attack_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_attack_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "attack_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_attack_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "deffense_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_deffense_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "damage_correction_type1", Type: field.TypeString},
		{Name: "damage_correction_value1", Type: field.TypeInt, Default: 1},
		{Name: "damage_correction_type2", Type: field.TypeString, Nullable: true},
		{Name: "damage_correction_value2", Type: field.TypeInt, Nullable: true},
		{Name: "weight_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// AbilitiesTable holds the schema information for the "abilities" table.
	AbilitiesTable = &schema.Table{
		Name:       "abilities",
		Columns:    AbilitiesColumns,
		PrimaryKey: []*schema.Column{AbilitiesColumns[0]},
	}
	// BattleOpponentPartiesColumns holds the columns for the "battle_opponent_parties" table.
	BattleOpponentPartiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "opponent_pokemon_id1", Type: field.TypeInt},
		{Name: "opponent_pokemon_id2", Type: field.TypeInt},
		{Name: "opponent_pokemon_id3", Type: field.TypeInt},
		{Name: "opponent_pokemon_id4", Type: field.TypeInt, Nullable: true},
		{Name: "opponent_pokemon_id5", Type: field.TypeInt, Nullable: true},
		{Name: "opponent_pokemon_id6", Type: field.TypeInt, Nullable: true},
	}
	// BattleOpponentPartiesTable holds the schema information for the "battle_opponent_parties" table.
	BattleOpponentPartiesTable = &schema.Table{
		Name:       "battle_opponent_parties",
		Columns:    BattleOpponentPartiesColumns,
		PrimaryKey: []*schema.Column{BattleOpponentPartiesColumns[0]},
	}
	// BattleRecordsColumns holds the columns for the "battle_records" table.
	BattleRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "battle_format", Type: field.TypeString},
		{Name: "self_election_pokemon_id1", Type: field.TypeInt},
		{Name: "self_election_pokemon_id2", Type: field.TypeInt},
		{Name: "self_election_pokemon_id3", Type: field.TypeInt},
		{Name: "self_election_pokemon_id4", Type: field.TypeInt, Nullable: true},
		{Name: "opponent_election_pokemon_id1", Type: field.TypeInt},
		{Name: "opponent_election_pokemon_id2", Type: field.TypeInt},
		{Name: "opponent_election_pokemon_id3", Type: field.TypeInt},
		{Name: "opponent_election_pokemon_id4", Type: field.TypeInt},
		{Name: "party_id", Type: field.TypeInt, Nullable: true},
		{Name: "battle_opponent_party_id", Type: field.TypeInt, Nullable: true},
	}
	// BattleRecordsTable holds the schema information for the "battle_records" table.
	BattleRecordsTable = &schema.Table{
		Name:       "battle_records",
		Columns:    BattleRecordsColumns,
		PrimaryKey: []*schema.Column{BattleRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "battle_records_parties_use_party",
				Columns:    []*schema.Column{BattleRecordsColumns[10]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "battle_records_battle_opponent_parties_opponent_party",
				Columns:    []*schema.Column{BattleRecordsColumns[11]},
				RefColumns: []*schema.Column{BattleOpponentPartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FormsColumns holds the columns for the "forms" table.
	FormsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "form_name", Type: field.TypeString},
		{Name: "is_regional_variant", Type: field.TypeBool, Default: false},
		{Name: "region_name", Type: field.TypeString},
	}
	// FormsTable holds the schema information for the "forms" table.
	FormsTable = &schema.Table{
		Name:       "forms",
		Columns:    FormsColumns,
		PrimaryKey: []*schema.Column{FormsColumns[0]},
	}
	// HeldItemsColumns holds the columns for the "held_items" table.
	HeldItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "physical_move_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_move_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "attack_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_attack_power_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "attack_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_attack_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "deffense_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "special_deffense_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "damage_correction_type1", Type: field.TypeString},
		{Name: "damage_correction_value1", Type: field.TypeInt, Default: 1},
		{Name: "damage_correction_type2", Type: field.TypeString, Nullable: true},
		{Name: "damage_correction_value2", Type: field.TypeInt, Nullable: true},
		{Name: "weight_correction_value", Type: field.TypeInt, Default: 1},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// HeldItemsTable holds the schema information for the "held_items" table.
	HeldItemsTable = &schema.Table{
		Name:       "held_items",
		Columns:    HeldItemsColumns,
		PrimaryKey: []*schema.Column{HeldItemsColumns[0]},
	}
	// MovesColumns holds the columns for the "moves" table.
	MovesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "None"}},
		{Name: "species", Type: field.TypeString},
		{Name: "power", Type: field.TypeInt},
		{Name: "accuracy", Type: field.TypeInt},
		{Name: "pp", Type: field.TypeInt},
		{Name: "is_contact", Type: field.TypeBool, Default: false},
		{Name: "is_can_guard", Type: field.TypeBool, Default: false},
	}
	// MovesTable holds the schema information for the "moves" table.
	MovesTable = &schema.Table{
		Name:       "moves",
		Columns:    MovesColumns,
		PrimaryKey: []*schema.Column{MovesColumns[0]},
	}
	// PartiesColumns holds the columns for the "parties" table.
	PartiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "battle_format", Type: field.TypeString, Nullable: true},
	}
	// PartiesTable holds the schema information for the "parties" table.
	PartiesTable = &schema.Table{
		Name:       "parties",
		Columns:    PartiesColumns,
		PrimaryKey: []*schema.Column{PartiesColumns[0]},
	}
	// PartyResultRecordsColumns holds the columns for the "party_result_records" table.
	PartyResultRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "generation", Type: field.TypeInt},
		{Name: "seasen", Type: field.TypeInt},
		{Name: "max_rate", Type: field.TypeInt, Nullable: true},
		{Name: "max_ranking", Type: field.TypeInt, Nullable: true},
		{Name: "party_id", Type: field.TypeInt, Nullable: true},
	}
	// PartyResultRecordsTable holds the schema information for the "party_result_records" table.
	PartyResultRecordsTable = &schema.Table{
		Name:       "party_result_records",
		Columns:    PartyResultRecordsColumns,
		PrimaryKey: []*schema.Column{PartyResultRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "party_result_records_parties_result_to_party",
				Columns:    []*schema.Column{PartyResultRecordsColumns[5]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PokemonsColumns holds the columns for the "pokemons" table.
	PokemonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pokedex_no", Type: field.TypeInt},
		{Name: "form_name", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "english_name", Type: field.TypeString},
		{Name: "type1", Type: field.TypeEnum, Enums: []string{"Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "None"}},
		{Name: "type2", Type: field.TypeEnum, Nullable: true, Enums: []string{"Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "None"}},
		{Name: "is_final_evolution", Type: field.TypeBool, Default: false},
		{Name: "base_stats_h", Type: field.TypeInt, Default: 0},
		{Name: "base_stats_a", Type: field.TypeInt, Default: 0},
		{Name: "base_stats_b", Type: field.TypeInt, Default: 0},
		{Name: "base_stats_c", Type: field.TypeInt, Default: 0},
		{Name: "base_stats_d", Type: field.TypeInt, Default: 0},
		{Name: "base_stats_s", Type: field.TypeInt, Default: 0},
		{Name: "ability_id1", Type: field.TypeInt, Nullable: true},
		{Name: "ability_id2", Type: field.TypeInt, Nullable: true},
		{Name: "hidden_ability_id", Type: field.TypeInt, Nullable: true},
		{Name: "form_no", Type: field.TypeInt, Nullable: true},
	}
	// PokemonsTable holds the schema information for the "pokemons" table.
	PokemonsTable = &schema.Table{
		Name:       "pokemons",
		Columns:    PokemonsColumns,
		PrimaryKey: []*schema.Column{PokemonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pokemons_abilities_ability1",
				Columns:    []*schema.Column{PokemonsColumns[14]},
				RefColumns: []*schema.Column{AbilitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "pokemons_abilities_ability2",
				Columns:    []*schema.Column{PokemonsColumns[15]},
				RefColumns: []*schema.Column{AbilitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "pokemons_abilities_hidden_ability",
				Columns:    []*schema.Column{PokemonsColumns[16]},
				RefColumns: []*schema.Column{AbilitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "pokemons_forms_form",
				Columns:    []*schema.Column{PokemonsColumns[17]},
				RefColumns: []*schema.Column{FormsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "is_generation_tag", Type: field.TypeBool, Default: false},
		{Name: "is_season_tag", Type: field.TypeBool, Default: false},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// TrainedPokemonDetailsColumns holds the columns for the "trained_pokemon_details" table.
	TrainedPokemonDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "ability_id", Type: field.TypeInt, Nullable: true},
		{Name: "held_item_id", Type: field.TypeInt, Nullable: true},
		{Name: "move_id1", Type: field.TypeInt, Nullable: true},
		{Name: "move_id2", Type: field.TypeInt, Nullable: true},
		{Name: "move_id3", Type: field.TypeInt, Nullable: true},
		{Name: "move_id4", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// TrainedPokemonDetailsTable holds the schema information for the "trained_pokemon_details" table.
	TrainedPokemonDetailsTable = &schema.Table{
		Name:       "trained_pokemon_details",
		Columns:    TrainedPokemonDetailsColumns,
		PrimaryKey: []*schema.Column{TrainedPokemonDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trained_pokemon_details_abilities_use_ability",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[5]},
				RefColumns: []*schema.Column{AbilitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_held_items_use_held_item",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[6]},
				RefColumns: []*schema.Column{HeldItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_moves_use_move1",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[7]},
				RefColumns: []*schema.Column{MovesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_moves_use_move2",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[8]},
				RefColumns: []*schema.Column{MovesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_moves_use_move3",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[9]},
				RefColumns: []*schema.Column{MovesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_moves_use_move4",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[10]},
				RefColumns: []*schema.Column{MovesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemon_details_users_training_detail_user",
				Columns:    []*schema.Column{TrainedPokemonDetailsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TrainedPokemonsColumns holds the columns for the "trained_pokemons" table.
	TrainedPokemonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "nature", Type: field.TypeString},
		{Name: "effort_value_h", Type: field.TypeInt, Default: 0},
		{Name: "effort_value_a", Type: field.TypeInt, Default: 0},
		{Name: "effort_value_b", Type: field.TypeInt, Default: 0},
		{Name: "effort_value_c", Type: field.TypeInt, Default: 0},
		{Name: "effort_value_d", Type: field.TypeInt, Default: 0},
		{Name: "effort_value_s", Type: field.TypeInt, Default: 0},
		{Name: "pokemon_id", Type: field.TypeInt, Nullable: true},
		{Name: "create_user_id", Type: field.TypeInt, Nullable: true},
	}
	// TrainedPokemonsTable holds the schema information for the "trained_pokemons" table.
	TrainedPokemonsTable = &schema.Table{
		Name:       "trained_pokemons",
		Columns:    TrainedPokemonsColumns,
		PrimaryKey: []*schema.Column{TrainedPokemonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trained_pokemons_pokemons_use_pokemon",
				Columns:    []*schema.Column{TrainedPokemonsColumns[10]},
				RefColumns: []*schema.Column{PokemonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trained_pokemons_users_training_user",
				Columns:    []*schema.Column{TrainedPokemonsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TypeCompatibilitiesColumns holds the columns for the "type_compatibilities" table.
	TypeCompatibilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "attack_type", Type: field.TypeEnum, Enums: []string{"Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "None"}},
		{Name: "defence_type", Type: field.TypeEnum, Enums: []string{"Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "None"}},
		{Name: "compatibility", Type: field.TypeInt, Default: 1},
	}
	// TypeCompatibilitiesTable holds the schema information for the "type_compatibilities" table.
	TypeCompatibilitiesTable = &schema.Table{
		Name:       "type_compatibilities",
		Columns:    TypeCompatibilitiesColumns,
		PrimaryKey: []*schema.Column{TypeCompatibilitiesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString},
		{Name: "role", Type: field.TypeString},
		{Name: "profile", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// MovesMoveToPokemonColumns holds the columns for the "moves_move_to_pokemon" table.
	MovesMoveToPokemonColumns = []*schema.Column{
		{Name: "moves_id", Type: field.TypeInt},
		{Name: "pokemons_id", Type: field.TypeInt},
	}
	// MovesMoveToPokemonTable holds the schema information for the "moves_move_to_pokemon" table.
	MovesMoveToPokemonTable = &schema.Table{
		Name:       "moves_move_to_pokemon",
		Columns:    MovesMoveToPokemonColumns,
		PrimaryKey: []*schema.Column{MovesMoveToPokemonColumns[0], MovesMoveToPokemonColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "moves_move_to_pokemon_moves_id",
				Columns:    []*schema.Column{MovesMoveToPokemonColumns[0]},
				RefColumns: []*schema.Column{MovesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "moves_move_to_pokemon_pokemons_id",
				Columns:    []*schema.Column{MovesMoveToPokemonColumns[1]},
				RefColumns: []*schema.Column{PokemonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TagsTagToPartyColumns holds the columns for the "tags_tag_to_party" table.
	TagsTagToPartyColumns = []*schema.Column{
		{Name: "tags_id", Type: field.TypeInt},
		{Name: "party_id", Type: field.TypeInt},
	}
	// TagsTagToPartyTable holds the schema information for the "tags_tag_to_party" table.
	TagsTagToPartyTable = &schema.Table{
		Name:       "tags_tag_to_party",
		Columns:    TagsTagToPartyColumns,
		PrimaryKey: []*schema.Column{TagsTagToPartyColumns[0], TagsTagToPartyColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_tag_to_party_tags_id",
				Columns:    []*schema.Column{TagsTagToPartyColumns[0]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tags_tag_to_party_party_id",
				Columns:    []*schema.Column{TagsTagToPartyColumns[1]},
				RefColumns: []*schema.Column{PartiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AbilitiesTable,
		BattleOpponentPartiesTable,
		BattleRecordsTable,
		FormsTable,
		HeldItemsTable,
		MovesTable,
		PartiesTable,
		PartyResultRecordsTable,
		PokemonsTable,
		TagsTable,
		TrainedPokemonDetailsTable,
		TrainedPokemonsTable,
		TypeCompatibilitiesTable,
		UsersTable,
		MovesMoveToPokemonTable,
		TagsTagToPartyTable,
	}
)

func init() {
	BattleRecordsTable.ForeignKeys[0].RefTable = PartiesTable
	BattleRecordsTable.ForeignKeys[1].RefTable = BattleOpponentPartiesTable
	PartyResultRecordsTable.ForeignKeys[0].RefTable = PartiesTable
	PokemonsTable.ForeignKeys[0].RefTable = AbilitiesTable
	PokemonsTable.ForeignKeys[1].RefTable = AbilitiesTable
	PokemonsTable.ForeignKeys[2].RefTable = AbilitiesTable
	PokemonsTable.ForeignKeys[3].RefTable = FormsTable
	TrainedPokemonDetailsTable.ForeignKeys[0].RefTable = AbilitiesTable
	TrainedPokemonDetailsTable.ForeignKeys[1].RefTable = HeldItemsTable
	TrainedPokemonDetailsTable.ForeignKeys[2].RefTable = MovesTable
	TrainedPokemonDetailsTable.ForeignKeys[3].RefTable = MovesTable
	TrainedPokemonDetailsTable.ForeignKeys[4].RefTable = MovesTable
	TrainedPokemonDetailsTable.ForeignKeys[5].RefTable = MovesTable
	TrainedPokemonDetailsTable.ForeignKeys[6].RefTable = UsersTable
	TrainedPokemonsTable.ForeignKeys[0].RefTable = PokemonsTable
	TrainedPokemonsTable.ForeignKeys[1].RefTable = UsersTable
	MovesMoveToPokemonTable.ForeignKeys[0].RefTable = MovesTable
	MovesMoveToPokemonTable.ForeignKeys[1].RefTable = PokemonsTable
	TagsTagToPartyTable.ForeignKeys[0].RefTable = TagsTable
	TagsTagToPartyTable.ForeignKeys[1].RefTable = PartiesTable
}
