// Code generated by entc, DO NOT EDIT.

package trainedpokemondetails

import (
	"time"
)

const (
	// Label holds the string label denoting the trainedpokemondetails type in the database.
	Label = "trained_pokemon_details"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldAbilityID holds the string denoting the ability_id field in the database.
	FieldAbilityID = "ability_id"
	// FieldHeldItemID holds the string denoting the held_item_id field in the database.
	FieldHeldItemID = "held_item_id"
	// FieldMoveId1 holds the string denoting the move_id1 field in the database.
	FieldMoveId1 = "move_id1"
	// FieldMoveId2 holds the string denoting the move_id2 field in the database.
	FieldMoveId2 = "move_id2"
	// FieldMoveId3 holds the string denoting the move_id3 field in the database.
	FieldMoveId3 = "move_id3"
	// FieldMoveId4 holds the string denoting the move_id4 field in the database.
	FieldMoveId4 = "move_id4"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// EdgeUseAbility holds the string denoting the use_ability edge name in mutations.
	EdgeUseAbility = "use_ability"
	// EdgeUseHeldItem holds the string denoting the use_held_item edge name in mutations.
	EdgeUseHeldItem = "use_held_item"
	// EdgeUseMove1 holds the string denoting the use_move1 edge name in mutations.
	EdgeUseMove1 = "use_move1"
	// EdgeUseMove2 holds the string denoting the use_move2 edge name in mutations.
	EdgeUseMove2 = "use_move2"
	// EdgeUseMove3 holds the string denoting the use_move3 edge name in mutations.
	EdgeUseMove3 = "use_move3"
	// EdgeUseMove4 holds the string denoting the use_move4 edge name in mutations.
	EdgeUseMove4 = "use_move4"
	// EdgeTrainingDetailUser holds the string denoting the training_detail_user edge name in mutations.
	EdgeTrainingDetailUser = "training_detail_user"
	// Table holds the table name of the trainedpokemondetails in the database.
	Table = "trained_pokemon_details"
	// UseAbilityTable is the table that holds the use_ability relation/edge.
	UseAbilityTable = "trained_pokemon_details"
	// UseAbilityInverseTable is the table name for the Abilities entity.
	// It exists in this package in order to avoid circular dependency with the "abilities" package.
	UseAbilityInverseTable = "abilities"
	// UseAbilityColumn is the table column denoting the use_ability relation/edge.
	UseAbilityColumn = "ability_id"
	// UseHeldItemTable is the table that holds the use_held_item relation/edge.
	UseHeldItemTable = "trained_pokemon_details"
	// UseHeldItemInverseTable is the table name for the HeldItems entity.
	// It exists in this package in order to avoid circular dependency with the "helditems" package.
	UseHeldItemInverseTable = "held_items"
	// UseHeldItemColumn is the table column denoting the use_held_item relation/edge.
	UseHeldItemColumn = "held_item_id"
	// UseMove1Table is the table that holds the use_move1 relation/edge.
	UseMove1Table = "trained_pokemon_details"
	// UseMove1InverseTable is the table name for the Moves entity.
	// It exists in this package in order to avoid circular dependency with the "moves" package.
	UseMove1InverseTable = "moves"
	// UseMove1Column is the table column denoting the use_move1 relation/edge.
	UseMove1Column = "move_id1"
	// UseMove2Table is the table that holds the use_move2 relation/edge.
	UseMove2Table = "trained_pokemon_details"
	// UseMove2InverseTable is the table name for the Moves entity.
	// It exists in this package in order to avoid circular dependency with the "moves" package.
	UseMove2InverseTable = "moves"
	// UseMove2Column is the table column denoting the use_move2 relation/edge.
	UseMove2Column = "move_id2"
	// UseMove3Table is the table that holds the use_move3 relation/edge.
	UseMove3Table = "trained_pokemon_details"
	// UseMove3InverseTable is the table name for the Moves entity.
	// It exists in this package in order to avoid circular dependency with the "moves" package.
	UseMove3InverseTable = "moves"
	// UseMove3Column is the table column denoting the use_move3 relation/edge.
	UseMove3Column = "move_id3"
	// UseMove4Table is the table that holds the use_move4 relation/edge.
	UseMove4Table = "trained_pokemon_details"
	// UseMove4InverseTable is the table name for the Moves entity.
	// It exists in this package in order to avoid circular dependency with the "moves" package.
	UseMove4InverseTable = "moves"
	// UseMove4Column is the table column denoting the use_move4 relation/edge.
	UseMove4Column = "move_id4"
	// TrainingDetailUserTable is the table that holds the training_detail_user relation/edge.
	TrainingDetailUserTable = "trained_pokemon_details"
	// TrainingDetailUserInverseTable is the table name for the Users entity.
	// It exists in this package in order to avoid circular dependency with the "users" package.
	TrainingDetailUserInverseTable = "users"
	// TrainingDetailUserColumn is the table column denoting the training_detail_user relation/edge.
	TrainingDetailUserColumn = "user_id"
)

// Columns holds all SQL columns for trainedpokemondetails fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldNickname,
	FieldGender,
	FieldAbilityID,
	FieldHeldItemID,
	FieldMoveId1,
	FieldMoveId2,
	FieldMoveId3,
	FieldMoveId4,
	FieldUserID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// AbilityIDValidator is a validator for the "ability_id" field. It is called by the builders before save.
	AbilityIDValidator func(int) error
	// HeldItemIDValidator is a validator for the "held_item_id" field. It is called by the builders before save.
	HeldItemIDValidator func(int) error
	// MoveId1Validator is a validator for the "move_id1" field. It is called by the builders before save.
	MoveId1Validator func(int) error
	// MoveId2Validator is a validator for the "move_id2" field. It is called by the builders before save.
	MoveId2Validator func(int) error
	// MoveId3Validator is a validator for the "move_id3" field. It is called by the builders before save.
	MoveId3Validator func(int) error
	// MoveId4Validator is a validator for the "move_id4" field. It is called by the builders before save.
	MoveId4Validator func(int) error
	// UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	UserIDValidator func(int) error
)
