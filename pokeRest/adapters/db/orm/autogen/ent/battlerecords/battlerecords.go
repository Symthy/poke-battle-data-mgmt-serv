// Code generated by entc, DO NOT EDIT.

package battlerecords

const (
	// Label holds the string label denoting the battlerecords type in the database.
	Label = "battle_records"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPartyID holds the string denoting the party_id field in the database.
	FieldPartyID = "party_id"
	// FieldBattleFormat holds the string denoting the battle_format field in the database.
	FieldBattleFormat = "battle_format"
	// FieldBattleOpponentPartyID holds the string denoting the battle_opponent_party_id field in the database.
	FieldBattleOpponentPartyID = "battle_opponent_party_id"
	// FieldSelfElectionPokemonId1 holds the string denoting the self_election_pokemon_id1 field in the database.
	FieldSelfElectionPokemonId1 = "self_election_pokemon_id1"
	// FieldSelfElectionPokemonId2 holds the string denoting the self_election_pokemon_id2 field in the database.
	FieldSelfElectionPokemonId2 = "self_election_pokemon_id2"
	// FieldSelfElectionPokemonId3 holds the string denoting the self_election_pokemon_id3 field in the database.
	FieldSelfElectionPokemonId3 = "self_election_pokemon_id3"
	// FieldSelfElectionPokemonId4 holds the string denoting the self_election_pokemon_id4 field in the database.
	FieldSelfElectionPokemonId4 = "self_election_pokemon_id4"
	// FieldOpponentElectionPokemonId1 holds the string denoting the opponent_election_pokemon_id1 field in the database.
	FieldOpponentElectionPokemonId1 = "opponent_election_pokemon_id1"
	// FieldOpponentElectionPokemonId2 holds the string denoting the opponent_election_pokemon_id2 field in the database.
	FieldOpponentElectionPokemonId2 = "opponent_election_pokemon_id2"
	// FieldOpponentElectionPokemonId3 holds the string denoting the opponent_election_pokemon_id3 field in the database.
	FieldOpponentElectionPokemonId3 = "opponent_election_pokemon_id3"
	// FieldOpponentElectionPokemonId4 holds the string denoting the opponent_election_pokemon_id4 field in the database.
	FieldOpponentElectionPokemonId4 = "opponent_election_pokemon_id4"
	// EdgeUseParty holds the string denoting the use_party edge name in mutations.
	EdgeUseParty = "use_party"
	// EdgeOpponentParty holds the string denoting the opponent_party edge name in mutations.
	EdgeOpponentParty = "opponent_party"
	// Table holds the table name of the battlerecords in the database.
	Table = "battle_records"
	// UsePartyTable is the table that holds the use_party relation/edge.
	UsePartyTable = "battle_records"
	// UsePartyInverseTable is the table name for the Party entity.
	// It exists in this package in order to avoid circular dependency with the "party" package.
	UsePartyInverseTable = "parties"
	// UsePartyColumn is the table column denoting the use_party relation/edge.
	UsePartyColumn = "party_id"
	// OpponentPartyTable is the table that holds the opponent_party relation/edge.
	OpponentPartyTable = "battle_records"
	// OpponentPartyInverseTable is the table name for the BattleOpponentParty entity.
	// It exists in this package in order to avoid circular dependency with the "battleopponentparty" package.
	OpponentPartyInverseTable = "battle_opponent_parties"
	// OpponentPartyColumn is the table column denoting the opponent_party relation/edge.
	OpponentPartyColumn = "battle_opponent_party_id"
)

// Columns holds all SQL columns for battlerecords fields.
var Columns = []string{
	FieldID,
	FieldPartyID,
	FieldBattleFormat,
	FieldBattleOpponentPartyID,
	FieldSelfElectionPokemonId1,
	FieldSelfElectionPokemonId2,
	FieldSelfElectionPokemonId3,
	FieldSelfElectionPokemonId4,
	FieldOpponentElectionPokemonId1,
	FieldOpponentElectionPokemonId2,
	FieldOpponentElectionPokemonId3,
	FieldOpponentElectionPokemonId4,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PartyIDValidator is a validator for the "party_id" field. It is called by the builders before save.
	PartyIDValidator func(int) error
	// BattleOpponentPartyIDValidator is a validator for the "battle_opponent_party_id" field. It is called by the builders before save.
	BattleOpponentPartyIDValidator func(int) error
	// SelfElectionPokemonId1Validator is a validator for the "self_election_pokemon_id1" field. It is called by the builders before save.
	SelfElectionPokemonId1Validator func(int) error
	// SelfElectionPokemonId2Validator is a validator for the "self_election_pokemon_id2" field. It is called by the builders before save.
	SelfElectionPokemonId2Validator func(int) error
	// SelfElectionPokemonId3Validator is a validator for the "self_election_pokemon_id3" field. It is called by the builders before save.
	SelfElectionPokemonId3Validator func(int) error
	// SelfElectionPokemonId4Validator is a validator for the "self_election_pokemon_id4" field. It is called by the builders before save.
	SelfElectionPokemonId4Validator func(int) error
	// OpponentElectionPokemonId1Validator is a validator for the "opponent_election_pokemon_id1" field. It is called by the builders before save.
	OpponentElectionPokemonId1Validator func(int) error
	// OpponentElectionPokemonId2Validator is a validator for the "opponent_election_pokemon_id2" field. It is called by the builders before save.
	OpponentElectionPokemonId2Validator func(int) error
	// OpponentElectionPokemonId3Validator is a validator for the "opponent_election_pokemon_id3" field. It is called by the builders before save.
	OpponentElectionPokemonId3Validator func(int) error
	// OpponentElectionPokemonId4Validator is a validator for the "opponent_election_pokemon_id4" field. It is called by the builders before save.
	OpponentElectionPokemonId4Validator func(int) error
)
