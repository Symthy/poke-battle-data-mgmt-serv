// Code generated by entc, DO NOT EDIT.

package partyresultrecord

const (
	// Label holds the string label denoting the partyresultrecord type in the database.
	Label = "party_result_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPartyID holds the string denoting the party_id field in the database.
	FieldPartyID = "party_id"
	// FieldGeneration holds the string denoting the generation field in the database.
	FieldGeneration = "generation"
	// FieldSeasen holds the string denoting the seasen field in the database.
	FieldSeasen = "seasen"
	// FieldMaxRate holds the string denoting the max_rate field in the database.
	FieldMaxRate = "max_rate"
	// FieldMaxRanking holds the string denoting the max_ranking field in the database.
	FieldMaxRanking = "max_ranking"
	// EdgeResultToParty holds the string denoting the result_to_party edge name in mutations.
	EdgeResultToParty = "result_to_party"
	// Table holds the table name of the partyresultrecord in the database.
	Table = "party_result_records"
	// ResultToPartyTable is the table that holds the result_to_party relation/edge.
	ResultToPartyTable = "party_result_records"
	// ResultToPartyInverseTable is the table name for the Party entity.
	// It exists in this package in order to avoid circular dependency with the "party" package.
	ResultToPartyInverseTable = "parties"
	// ResultToPartyColumn is the table column denoting the result_to_party relation/edge.
	ResultToPartyColumn = "party_id"
)

// Columns holds all SQL columns for partyresultrecord fields.
var Columns = []string{
	FieldID,
	FieldPartyID,
	FieldGeneration,
	FieldSeasen,
	FieldMaxRate,
	FieldMaxRanking,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PartyIDValidator is a validator for the "party_id" field. It is called by the builders before save.
	PartyIDValidator func(int) error
	// GenerationValidator is a validator for the "generation" field. It is called by the builders before save.
	GenerationValidator func(int) error
	// SeasenValidator is a validator for the "seasen" field. It is called by the builders before save.
	SeasenValidator func(int) error
	// MaxRateValidator is a validator for the "max_rate" field. It is called by the builders before save.
	MaxRateValidator func(int) error
	// MaxRankingValidator is a validator for the "max_ranking" field. It is called by the builders before save.
	MaxRankingValidator func(int) error
)
