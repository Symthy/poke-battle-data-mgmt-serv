openapi: 3.0.0
info:
  title: PokeRest
  version: '1.0'
  description: PokeRest API
  contact:
    name: SYM
    url: 'https://twitter.com/SYM_souten'
  license:
    name: MIT
servers:
  - url: 'http://localhost:3000/PokeRest'
paths:
  /pokemons:
    parameters: []
    get:
      summary: get pokemons
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemons'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemons
      description: 'all '
      parameters:
        - schema:
            type: string
          in: query
          name: move
          description: 技名検索
        - schema:
            type: string
          in: query
          name: type
          description: タイプ検索
        - schema:
            type: string
          in: query
          name: name
          description: 名前検索
        - schema:
            type: string
          in: query
          name: ablity
          description: 特性検索
        - schema:
            type: string
          in: query
          name: baseStatsFilter
          description: 種族値フィルター
        - schema:
            type: string
          in: query
          name: maxActualFilter
          description: 最大実数値フィルター
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
  '/pokemons/{pokedexNo}/{formNo}/details':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: pokedexNo
        in: path
        required: true
        description: 図鑑No
      - schema:
          type: integer
          format: uint64
        name: formNo
        in: path
        description: フォルムNo
        required: true
    get:
      summary: get pokemon by No and Form
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDetail'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemon-details-by-pokedexNo-and-formNo
      description: 指定ポケモンDetail情報取得
  '/pokemons/{pokedexNo}/details':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: pokedexNo
        in: path
        required: true
        description: 図鑑No
    get:
      summary: get pokemon by No
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDetails'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemon-details-by-pokedexNo
      description: 指定ポケモンDetail情報取得
  /pokemons/details:
    parameters: []
    get:
      summary: get pokemons
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemons'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemons-details
      description: all ※detail複数取得は見送り
      parameters:
        - schema:
            type: string
          in: query
          name: move
          description: 技名検索
        - schema:
            type: string
          in: query
          name: type
          description: タイプ検索
        - schema:
            type: string
          in: query
          name: name
          description: 名前検索
        - schema:
            type: string
          in: query
          name: ablitiy
          description: 特性検索
      x-internal: true
  '/pokemons/{pokedexNo}/{formNo}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: pokedexNo
        in: path
        required: true
        description: 図鑑No
      - schema:
          type: integer
          format: uint64
        name: formNo
        in: path
        description: フォルムNo
        required: true
    get:
      summary: get pokemon by No
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemon-by-pokedexNo-and-formNo
      description: 指定ポケモン情報取得
      x-internal: true
  '/pokemons/abilities/{abilityId}':
    get:
      summary: get pokemons by specified ability
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemons'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemons-by-specified-ability
      description: 指定特性のポケモン一覧取得
      x-internal: false
    parameters:
      - schema:
          type: integer
          format: uint64
        name: abilityId
        in: path
        required: true
  '/pokemons/moves/{moveId}':
    get:
      summary: get pokemons by specified move
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemons'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-pokemons-by-specified-move
      description: 指定技を覚えるポケモン一覧取得
      parameters: []
      x-internal: false
    parameters:
      - schema:
          type: integer
          format: uint64
        name: moveId
        in: path
        required: true
  /abilities:
    parameters: []
    get:
      summary: get abilities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abilities'
          headers: {}
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-abilities
      description: 特性取得
      tags:
        - Pokemon Base Data
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: 特性名検索
        - schema:
            type: string
            enum:
              - All
              - Attack
              - Defense
          in: query
          description: 分類指定(All/Attack/Defense)
          name: specifies
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
  '/abilities/{avilityId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: avilityId
        in: path
        description: 特性ID
        required: true
    get:
      summary: get ability by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ability'
          headers: {}
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-ability-by-Id
      description: 特性取得
      tags:
        - Pokemon Base Data
  '/abilities/pokemons/{pokemonId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: pokemonId
        in: path
        required: true
    get:
      summary: get abilities by specified pokemon id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abilities'
          headers: {}
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-abilities-by-specifed-pokemon-id
      description: 指定ポケの特性一覧取得
      tags:
        - Pokemon Base Data
      parameters: []
  /moves:
    get:
      summary: get moves
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moves'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-moves
      description: 技一覧取得
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: 技名検索
        - schema:
            type: string
          in: query
          name: type
          description: タイプ検索
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
    parameters: []
  '/moves/{moveId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: moveId
        in: path
        required: true
        description: 技ID
    get:
      summary: get move by id
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Move'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-move-by-Id
      description: 技取得
  '/moves/pokemons/{pokemonId}':
    get:
      summary: get moves by specified pokemon id
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moves'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-moves-by-specified-pokemon-id
      description: 指定ポケの技一覧取得
      parameters: []
    parameters:
      - schema:
          type: integer
          format: uint64
        name: pokemonId
        in: path
        required: true
  /types:
    get:
      summary: get types
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  types:
                    type: array
                    items:
                      type: string
                required:
                  - types
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-types
      description: タイプ一覧取得
      parameters: []
  /types/compability:
    get:
      summary: get type compability
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeCompatibilityTable'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-types-compability
      description: タイプ相性取得
    parameters: []
  '/types/compability/attack/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: タイプ指定
    get:
      summary: get type compability of attack side
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeCompatibility'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-type-compability-of-attack-side
      description: タイプ相性（攻撃側）
  '/types/compability/defense/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
        description: タイプ指定
    get:
      summary: get type compability of defense side
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeCompatibility'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-type-compability-of-defense-side
      description: タイプ相性（防御側）取得
  /helditems:
    get:
      summary: get held items
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeldItems'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-held-items
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: アイテム名検索
        - schema:
            type: string
          in: query
          name: specifies
          description: 分類指定(All/Attack/Deffence)
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
    parameters: []
  '/helditems/{id}':
    get:
      summary: get held items by id
      tags:
        - Pokemon Base Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeldItems'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-held-items-id
      parameters: []
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
  /trainedpokemons:
    get:
      summary: GET trained pokemons
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemons'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-trained-pokemons
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: pokemon
          description: ポケモン名検索
        - schema:
            type: string
          in: query
          name: type
          description: タイプ検索
        - schema:
            type: string
          in: query
          name: ability
          description: 特性検索
        - schema:
            type: string
          in: query
          name: nature
          description: 性格検索
        - schema:
            type: string
          in: query
          name: helditem
          description: 持ち物検索
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
    post:
      summary: POST trained pokemon
      operationId: post-trainedpokemons
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemon'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateTrainedPokemon'
  '/trainedpokemons/{id}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET trained pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonDetail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-trained-pokemons-id
      tags:
        - User Transaction Data
    delete:
      summary: DELETE trained pokemon
      operationId: delete-trained-pokemons-id
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
      description: ''
    put:
      summary: PUT trained pokemon
      operationId: put-trainedpokemons-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemon'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          description: Not Acceptable
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateTrainedPokemon'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestUpdateTrainedPokemon'
  '/trainedpokemons/{id}/attacks':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET trained pokemon attack adjustments
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonAttacks'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-trained-pokemons-id-attacks
    post:
      summary: POST trained pokemon attack adjustment
      operationId: post-trainedpokemons-id-attacks
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonAttack'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateTrainedPokeAttackTarget'
  '/trainedpokemons/{trainedPokemonId}/attacks/{attackId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: trainedPokemonId
        in: path
        required: true
        description: trained pokemon id
      - schema:
          type: integer
          format: uint64
        name: attackId
        in: path
        required: true
        description: attack adjustment id
    get:
      summary: GET trained pokemon attack adjustment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonAttack'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          description: Internal Server Error
      operationId: get-trained-pokemons-id-attacks-id
    delete:
      summary: DELETE trained pokemon attack adjustment
      operationId: delete-trained-pokemons-id-attacks-Id
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - User Transaction Data
    put:
      summary: PUT trained pokemon attack adjustment
      operationId: put-trainedpokemons-trainedPokemonId-attacks-attackId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonAttack'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateTrainedPokeAttackTarget'
  '/trainedpokemons/{id}/deffences':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
        description: trained pokemon id
    get:
      summary: GET trained pokemon deffence adjustments
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonDeffences'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-trained-pokemons-id-deffences
    post:
      summary: POST trained pokemon deffence adjustment
      operationId: post-trainedpokemons-id-deffences
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonDeffence'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateTrainedPokeDefenceTarget'
  '/trainedpokemons/{trainedPokemonId}/deffences/{deffenceId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: trainedPokemonId
        in: path
        required: true
        description: trained pokemon id
      - schema:
          type: integer
          format: uint64
        name: deffenceId
        in: path
        required: true
        description: deffence adjustment id
    get:
      summary: GET trained pokemon deffence adjustment
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-trained-pokemons-id-deffences-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainedPokemonDeffence'
    delete:
      summary: DELETE trained pokemon deffence adjustment
      operationId: delete-trained-pokemons-id-deffences-id
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: PUT trained pokemon deffence adjustment
      operationId: put-trainedpokemons-trainedPokemonId-deffences-deffenceId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemonDeffence'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateTrainedPokeDefenceTarget'
  /parties:
    get:
      summary: GET Parties
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parties'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-parties
      parameters:
        - schema:
            type: string
          in: query
          name: pokemon
          description: ポケモン
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
        - schema:
            type: string
          in: query
          name: tag
          description: タグ
    parameters: []
    post:
      summary: POST party
      operationId: post-parties
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateParty'
  '/parties/{id}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET Party
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-parties-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateParty'
    delete:
      summary: DELETE party
      operationId: delete-parties-id
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: PUT party
      operationId: put-parties-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateParty'
  /parties/tags:
    get:
      summary: GET party tags
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyTags'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-parties-tags
      parameters:
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
    post:
      summary: POST party tag
      operationId: post-parties-tags
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyTag'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyTag'
  '/parties/tags/{id}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    delete:
      summary: DELETE party tag
      operationId: delete-parties-tags-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyTag'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
  /battles:
    parameters: []
    post:
      summary: POST Battle record
      operationId: post-battles
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateBattleRecord'
    get:
      summary: GET Battle record
      operationId: get-battles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BattleRecords'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          description: Internal Server Error
  '/battles/{id}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    delete:
      summary: DELETE battle record
      operationId: delete-battles
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: PUT Battle record
      operationId: put-battles-id
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateBattleRecord'
  '/battles/parties/{partyId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: partyId
        in: path
        required: true
    get:
      summary: GET battle record of Party
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BattleRecords'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-battles-partyId
  '/battles/users/{userId}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: userId
        in: path
        required: true
    get:
      summary: GET battle record of User
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BattleRecords'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-battles-userId
  '/users/{id}':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET User
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-users-id
  '/users/{id}/trainedpokemons':
    get:
      summary: GET user trained pokemons
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedPokemons'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-users-id-trained-pokemons
      parameters:
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
  '/users/{id}/parties':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET user parties
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parties'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-users-id-parties
      parameters:
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
  '/users/{id}/battles':
    parameters:
      - schema:
          type: integer
          format: uint64
        name: id
        in: path
        required: true
    get:
      summary: GET user battle records
      tags:
        - User Transaction Data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BattleRecords'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          $ref: '#/components/responses/406'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-users-id-battles
      parameters:
        - schema:
            type: integer
            format: uint64
          in: query
          name: next
          description: next id
  /damages/single:
    post:
      summary: damage calculation (single)
      operationId: post-damages-single
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DamageResult'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/403'
        '406':
          description: Not Acceptable
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCalclateSingleDamage'
    parameters: []
  /damages/multi:
    post:
      summary: damage calculation (multi)
      operationId: post-damages-multi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DamageResults'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/403'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCalclateMultiDamages'
    parameters: []
  /signin:
    post:
      summary: SignIn
      operationId: post-signin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '413':
          description: Request Entity Too Large
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUser'
  /signup:
    post:
      summary: SignUp
      operationId: post-signup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '413':
          description: Request Entity Too Large
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUser'
    parameters: []
  /health:
    get:
      summary: GET health check
      tags: []
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '414':
          $ref: '#/components/responses/414'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-health
components:
  schemas:
    Pokemon:
      description: Pokemon Summary
      type: object
      title: Pokemon
      properties:
        id:
          type: integer
          format: uint16
        pokedexNo:
          type: integer
          format: uint16
        formNo:
          type: integer
          format: uint16
        formName:
          type: string
        name:
          type: string
          minLength: 1
        englishName:
          type: string
          minLength: 1
        baseStatsH:
          type: integer
          format: uint8
        baseStatsA:
          type: integer
          format: uint8
        baseStatsB:
          type: integer
          format: uint8
        baseStatsC:
          type: integer
          format: uint8
        baseStatsD:
          type: integer
          format: uint8
        baseStatsS:
          type: integer
          format: uint8
        type1:
          type: string
        type2:
          type: string
        ability1:
          type: integer
          format: uint16
        ability2:
          type: integer
          format: uint16
        hiddenAbility:
          type: integer
          format: uint16
      required:
        - id
        - pokedexNo
        - formNo
        - formName
        - name
        - englishName
        - baseStatsH
        - baseStatsA
        - baseStatsB
        - baseStatsC
        - baseStatsD
        - baseStatsS
        - type1
        - ability1
    PokemonDetail:
      description: Pokemon Detail
      type: object
      title: PokemonDetail
      properties:
        id:
          type: integer
          format: uint16
        pokedexNo:
          type: integer
          format: uint16
        formNo:
          type: integer
          format: uint16
        FormName:
          type: string
        englishName:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        baseStatsH:
          type: integer
          format: uint8
        baseStatsA:
          type: integer
          format: uint8
        baseStatsB:
          type: integer
          format: uint8
        baseStatsC:
          type: integer
          format: uint8
        baseStatsD:
          type: integer
          format: uint8
        baseStatsS:
          type: integer
          format: uint8
        type1:
          type: string
        type2:
          type: string
        ability1:
          $ref: '#/components/schemas/Ability'
        ability2:
          $ref: '#/components/schemas/Ability'
        hiddenAbility:
          $ref: '#/components/schemas/Ability'
        moves:
          $ref: '#/components/schemas/Moves'
      required:
        - id
        - pokedexNo
        - formNo
        - englishName
        - name
        - baseStatsH
        - baseStatsA
        - baseStatsB
        - baseStatsC
        - baseStatsD
        - baseStatsS
        - type1
        - ability1
        - moves
    Pokemons:
      description: pokemon summary data list
      type: object
      title: Pokemons
      properties:
        pokemons:
          type: array
          items:
            $ref: '#/components/schemas/Pokemon'
        count:
          type: integer
          format: uint16
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint16
      required:
        - pokemons
        - count
        - hasNext
    PokemonDetails:
      description: pokemon detail data list
      type: object
      title: Pokemons
      properties:
        pokemons:
          type: array
          items:
            $ref: '#/components/schemas/PokemonDetail'
        count:
          type: integer
          format: uint16
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint16
      required:
        - pokemons
        - count
        - hasNext
    Move:
      description: 技
      type: object
      title: Move
      properties:
        id:
          type: integer
          format: uint16
        name:
          type: string
        type:
          type: string
        species:
          description: 分類（物理/特殊）
          type: string
        power:
          type: integer
          description: 威力
          format: uint8
          minimum: 0
          maximum: 200
        specialPower:
          type: integer
          description: 威力
          format: uint8
          minimum: 0
          maximum: 200
        accuracy:
          type: integer
          description: 命中
          format: uint8
          minimum: 0
          maximum: 100
        pp:
          type: integer
          description: PP
          format: uint8
          minimum: 0
          maximum: 100
        isContactMove:
          description: 接触/非接触
          type: boolean
        isCanGuard:
          type: boolean
          description: 守る
        corrections:
          $ref: '#/components/schemas/CorrectionDataList'
      required:
        - id
        - name
        - type
        - species
        - power
        - specialPower
        - accuracy
        - pp
        - isContactMove
        - isCanGuard
    Moves:
      description: 技一覧
      type: object
      title: Moves
      properties:
        moves:
          type: array
          items:
            $ref: '#/components/schemas/Move'
        count:
          type: integer
          format: uint16
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint16
      required:
        - moves
        - count
        - hasNext
    Ability:
      description: 特性
      type: object
      title: Ability
      properties:
        id:
          type: integer
          format: uint16
        name:
          type: string
        description:
          type: string
        corrections:
          $ref: '#/components/schemas/CorrectionDataList'
      required:
        - id
        - name
        - description
    Abilities:
      description: 特性一覧
      type: object
      title: Abilities
      properties:
        abilities:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        count:
          type: integer
          format: uint16
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint16
      required:
        - abilities
        - count
        - hasNext
    HeldItem:
      title: HeldItem
      type: object
      description: 持ち物
      properties:
        id:
          type: integer
          format: uint16
        name:
          type: string
        description:
          type: string
        corrections:
          $ref: '#/components/schemas/CorrectionDataList'
      required:
        - id
        - name
        - description
    HeldItems:
      title: HeldItems
      type: object
      description: 持ち物一覧
      properties:
        heldItems:
          type: array
          items:
            $ref: '#/components/schemas/HeldItem'
        count:
          type: integer
          format: uint16
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint16
      required:
        - heldItems
        - count
        - hasNext
    CorrectionData:
      type: object
      properties:
        correctionValue:
          description: 補正値
          type: number
        correctionType:
          description: 補正対象
          type: string
      required:
        - correctionValue
        - correctionType
    CorrectionDataList:
      description: 補正値リスト
      title: ''
      type: object
      properties:
        corrections:
          type: array
          items:
            $ref: '#/components/schemas/CorrectionData'
      required:
        - corrections
    TypeCompatibilityTable:
      description: タイプ相性表
      type: object
      x-examples: {}
      title: TypeCompatibilityTable
      properties:
        compatibilityTable:
          type: array
          items:
            type: array
            items:
              type: number
        typeOrder:
          type: array
          description: テーブル行列のタイプ順序
          items:
            type: string
      required:
        - compatibilityTable
        - typeOrder
    TypeCompatibility:
      description: 1タイプに対するタイプ相性リスト
      type: object
      x-examples: {}
      title: TypeCompatibility
      properties:
        targetType:
          type: string
        compatibilities:
          type: array
          items:
            type: number
        typeOrder:
          type: array
          description: テーブル行列のタイプ順序
          items:
            type: string
      required:
        - targetType
        - compatibilities
        - typeOrder
    Form:
      title: Form
      type: object
      description: フォルム
      properties:
        id:
          type: integer
          format: uint16
        name:
          type: string
        IsRegionalVariant:
          type: boolean
        regionName:
          type: string
      required:
        - id
        - name
        - IsRegionalVariant
        - regionName
    User:
      title: User
      type: object
      description: user
      properties:
        id:
          type: integer
          format: uint64
        name:
          type: string
        displayName:
          type: string
        twitter:
          type: string
        profile:
          type: string
      required:
        - id
        - name
        - twitter
    Error:
      title: Error
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        type:
          type: string
    AuthUser:
      title: AuthUser
      type: object
      properties:
        name:
          type: string
        password:
          type: string
      required:
        - name
        - password
    LoginSuccess:
      title: LoginSuccess
      type: object
      properties:
        token:
          type: string
      required:
        - token
    TrainedPokemon:
      title: TrainedPokemon
      type: object
      description: trained pokemon summary
      properties:
        id:
          type: integer
          format: uint64
        pokemonNo:
          type: integer
          format: uint16
        FormNo:
          type: integer
          format: uint16
        PokemonName:
          type: string
        nickname:
          type: string
        gender:
          type: string
        nature:
          type: string
        ability:
          type: string
        heldItem:
          type: string
        effortValueH:
          type: integer
          format: uint8
        effortValueA:
          type: integer
          format: uint8
        effortValueB:
          type: integer
          format: uint8
        effortValueC:
          type: integer
          format: uint8
        effortValueD:
          type: integer
          format: uint8
        effortValueS:
          type: integer
          format: uint8
        isPrivate:
          type: boolean
        moveName1:
          type: string
        moveName2:
          type: string
        moveName3:
          type: string
        moveName4:
          type: string
        attackAdjustmentIds:
          type: array
          items:
            type: integer
            format: uint64
        deffenceAdjustmentIds:
          type: array
          items:
            type: integer
            format: uint64
      required:
        - id
        - pokemonNo
        - FormNo
        - PokemonName
        - effortValueH
        - effortValueA
        - effortValueB
        - effortValueC
        - effortValueD
        - effortValueS
        - isPrivate
    TrainedPokemonNo:
      title: TrainedPokemonNo
      type: object
      description: trained pokemon numbers
      properties:
        id:
          type: integer
          format: uint64
        pokemonNo:
          type: integer
          format: uint16
        formNo:
          type: integer
          format: uint16
      required:
        - id
        - pokemonNo
        - formNo
    TrainedPokemonDetail:
      title: TrainedPokemonDetail
      type: object
      description: trained pokemon detail
      properties:
        id:
          type: integer
          format: uint64
        pokemon:
          $ref: '#/components/schemas/Pokemon'
        nickname:
          type: string
        gender:
          type: string
        nature:
          type: string
        ability:
          $ref: '#/components/schemas/Ability'
        heldItem:
          $ref: '#/components/schemas/HeldItem'
        effortValueH:
          type: integer
          format: uint8
        effortValueA:
          type: integer
          format: uint8
        effortValueB:
          type: integer
          format: uint8
        effortValueC:
          type: integer
          format: uint8
        effortValueD:
          type: integer
          format: uint8
        effortValueS:
          type: integer
          format: uint8
        move1:
          $ref: '#/components/schemas/Move'
        move2:
          $ref: '#/components/schemas/Move'
        move3:
          $ref: '#/components/schemas/Move'
        move4:
          $ref: '#/components/schemas/Move'
        attackAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemonAttack'
        deffenceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemonDeffence'
        isPrivate:
          type: boolean
        createdUserId:
          type: integer
      required:
        - id
        - pokemon
        - effortValueH
        - effortValueA
        - effortValueB
        - effortValueC
        - effortValueD
        - effortValueS
        - isPrivate
    TrainedPokemons:
      title: TrainedPokemons
      type: object
      description: ''
      properties:
        trainedPokemons:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemon'
        count:
          type: integer
          format: uint64
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint64
      required:
        - trainedPokemons
        - count
        - hasNext
    TrainedPokemonAttack:
      title: TrainedPokemonAttack
      type: object
      properties:
        move:
          $ref: '#/components/schemas/Move'
        opponentPokemon:
          type: object
          required:
            - pokemon
            - effortValueH
            - effortValueB
            - effortValueD
          properties:
            pokemon:
              $ref: '#/components/schemas/Pokemon'
            nature:
              type: string
            effortValueH:
              type: integer
              format: uint8
            effortValueB:
              type: integer
              format: uint8
            effortValueD:
              type: integer
              format: uint8
      required:
        - move
        - opponentPokemon
    TrainedPokemonAttacks:
      title: TrainedPokemonAttacks
      type: object
      properties:
        attackAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemonAttack'
        count:
          type: integer
      required:
        - attackAdjustments
        - count
    TrainedPokemonDeffence:
      title: TrainedPokemonDeffence
      type: object
      properties:
        move:
          $ref: '#/components/schemas/Move'
        opponentPokemon:
          type: object
          required:
            - pokemon
            - effortValueA
            - effortValueC
          properties:
            pokemon:
              $ref: '#/components/schemas/Pokemon'
            nature:
              type: string
            effortValueA:
              type: integer
              format: uint8
            effortValueC:
              type: integer
              format: uint8
      required:
        - move
        - opponentPokemon
    TrainedPokemonDeffences:
      title: TrainedPokemonDeffences
      type: object
      properties:
        deffenceAdjustments:
          $ref: '#/components/schemas/TrainedPokemonDeffence'
        count:
          type: integer
      required:
        - deffenceAdjustments
        - count
    Party:
      title: Party
      type: object
      description: party summary
      properties:
        id:
          type: integer
          format: uint64
        name:
          type: string
        battleFormat:
          type: string
        partyTags:
          type: array
          items:
            type: string
        memberPokemonIds:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemonNo'
        createdUserId:
          type: integer
          format: uint64
        createdUserName:
          type: string
      required:
        - id
        - battleFormat
        - memberPokemonIds
    Parties:
      title: Parties
      type: object
      description: パーティ一覧
      properties:
        parties:
          type: array
          items:
            $ref: '#/components/schemas/Party'
        count:
          type: integer
          format: uint64
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint64
      required:
        - parties
        - count
        - hasNext
    PartyDetail:
      title: Party Detail
      type: object
      description: party detail
      properties:
        id:
          type: integer
          format: uint64
        name:
          type: string
        battleFormat:
          type: string
        partyTags:
          type: array
          items:
            $ref: '#/components/schemas/PartyTags'
        memberPokemons:
          type: array
          items:
            $ref: '#/components/schemas/TrainedPokemonDetail'
        createdUserId:
          type: integer
          format: uint64
        createdUserName:
          type: string
      required:
        - id
        - battleFormat
        - memberPokemons
    PartyTag:
      title: PartyTag
      type: object
      properties:
        id:
          type: integer
          format: uint64
        name:
          type: string
        isGeneration:
          type: boolean
        isSeason:
          type: boolean
      required:
        - id
        - name
        - isGeneration
        - isSeason
    PartyTags:
      title: PartyTags
      type: object
      description: ''
      properties:
        partytags:
          type: array
          items:
            $ref: '#/components/schemas/PartyTag'
        count:
          type: integer
          format: uint64
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint64
      required:
        - partytags
        - count
        - hasNext
    BattleRecord:
      title: BattleRecord
      type: object
      properties:
        id:
          type: integer
          format: uint64
        partyId:
          type: integer
          format: uint64
        battleSeason:
          $ref: '#/components/schemas/BattleSeason'
        battleResult:
          type: string
        opponentParty:
          $ref: '#/components/schemas/BattleOpponentParty'
        selfElectionPokemonIds:
          type: array
          items:
            type: integer
            format: uint64
        opponentElectionPokemonIds:
          type: array
          items:
            type: integer
            format: uint64
      required:
        - id
        - partyId
        - battleSeason
        - battleResult
        - opponentParty
        - selfElectionPokemonIds
        - opponentElectionPokemonIds
    BattleRecords:
      title: PartyTags
      type: object
      description: ''
      properties:
        partytags:
          type: array
          items:
            $ref: '#/components/schemas/BattleRecord'
        count:
          type: integer
          format: uint64
        hasNext:
          type: boolean
        next:
          type: integer
          format: uint64
      required:
        - partytags
        - count
        - hasNext
    BattleSeason:
      title: SeasonDetail
      type: object
      properties:
        generation:
          type: integer
          format: uint16
        series:
          type: integer
          format: uint16
        season:
          type: integer
          format: uint16
      required:
        - generation
        - series
        - season
    BattleOpponentParty:
      title: BattleOpponentParty
      type: object
      properties:
        id:
          type: integer
          format: uint64
        pokemonId1:
          type: integer
          format: uint16
        pokemonId2:
          type: integer
          format: uint16
        pokemonId3:
          type: integer
          format: uint16
        pokemonId4:
          type: integer
          format: uint16
        pokemonId5:
          type: integer
          format: uint16
        pokemonId6:
          type: integer
          format: uint16
      required:
        - id
    RequestCreateBattleRecord:
      description: ''
      type: object
      properties:
        partyId:
          type: integer
          format: uint64
        battleSeason:
          $ref: '#/components/schemas/BattleSeason'
        result:
          type: string
          minLength: 1
        battleFormat:
          type: string
          minLength: 1
        opponentParty:
          type: object
          required:
            - pokemonIds
            - electionPokemonIds
          properties:
            pokemonIds:
              type: array
              items:
                type: integer
                format: uint16
            electionPokemonIds:
              type: array
              items:
                type: integer
                format: uint16
      required:
        - partyId
        - result
        - battleFormat
        - opponentParty
    RequestUpdateBattleRecord:
      description: ''
      type: object
      properties:
        id:
          type: integer
          format: uint64
        partyId:
          type: integer
          format: uint64
        battleSeason:
          $ref: '#/components/schemas/BattleSeason'
        result:
          type: string
          minLength: 1
        battleFormat:
          type: string
          minLength: 1
        opponentParty:
          type: object
          required:
            - pokemonIds
            - electionPokemonIds
          properties:
            pokemonIds:
              type: array
              items:
                type: integer
                format: uint64
            electionPokemonIds:
              type: array
              items:
                type: integer
                format: uint64
      required:
        - id
        - partyId
        - result
        - battleFormat
        - opponentParty
    RequestCreateParty:
      title: RequestCreateParty
      type: object
      properties:
        name:
          type: string
        battleFormat:
          type: string
        isPrivate:
          type: boolean
        partyTags:
          type: array
          items:
            type: string
        trainedPokemonIds:
          type: array
          items:
            type: integer
            format: uint64
    RequestUpdateParty:
      type: object
      title: RequestUpdateParty
      properties:
        id:
          type: integer
          format: uint64
        name:
          type: string
          minLength: 1
        battleFormat:
          type: string
          minLength: 1
        isPrivate:
          type: boolean
        partyTags:
          type: array
          items:
            type: string
        trainedPokemonIds:
          type: array
          items:
            type: integer
            format: uint64
      required:
        - id
    RequestUpdateTrainedPokemon:
      title: RequestCreateTrainedPokemon
      type: object
      properties:
        id:
          type: integer
          format: uint64
        gender:
          type: string
        nickname:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
        adjustment:
          type: object
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            abilityId:
              type: integer
              format: uint64
            heldItemId:
              type: integer
              format: uint64
            effortValueH:
              type: integer
              format: uint64
            effortValueA:
              type: integer
              format: uint64
            effortValueB:
              type: integer
              format: uint64
            effortValueC:
              type: integer
              format: uint64
            effortValueD:
              type: integer
              format: uint64
            effortValueS:
              type: integer
              format: uint64
            moveIds:
              type: array
              items:
                type: integer
                format: uint64
          required:
            - pokemonId
      required:
        - id
    RequestCreateTrainedPokemon:
      title: RequestCreateTrainedPokemon
      type: object
      properties:
        gender:
          type: string
        nickname:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
        adjustment:
          type: object
          required:
            - pokemonId
            - nature
            - abilityId
            - moveIds
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            abilityId:
              type: integer
              format: uint64
            heldItemId:
              type: integer
              format: uint64
            effortValueH:
              type: integer
              format: uint64
            effortValueA:
              type: integer
              format: uint64
            effortValueB:
              type: integer
              format: uint64
            effortValueC:
              type: integer
              format: uint64
            effortValueD:
              type: integer
              format: uint64
            effortValueS:
              type: integer
              format: uint64
            moveIds:
              type: array
              items:
                type: integer
                format: uint64
      required:
        - isPrivate
        - adjustment
    RequestCreateTrainedPokeAttackTarget:
      title: RequestCreateTrainedPokeAttackTarget
      type: object
      description: ''
      properties:
        trainedPokemonId:
          type: integer
          format: uint64
        moveId:
          type: integer
          format: uint64
        target:
          type: object
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            effortValueH:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueB:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueD:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
      required:
        - trainedPokemonId
    RequestUpdateTrainedPokeAttackTarget:
      title: RequestUpdateTrainedPokeAttackTarget
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: uint64
        trainedPokemonId:
          type: integer
          format: uint64
        moveId:
          type: integer
          format: uint64
        target:
          type: object
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            effortValueH:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueB:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueD:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
      required:
        - id
        - trainedPokemonId
    RequestCreateTrainedPokeDefenceTarget:
      title: RequestCreateTrainedPokeDefenceTarget
      type: object
      description: ''
      properties:
        trainedPokemonId:
          type: integer
          format: uint64
        moveId:
          type: integer
          format: uint64
        target:
          type: object
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            effortValueA:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueC:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
      required:
        - trainedPokemonId
        - moveId
    RequestUpdateTrainedPokeDefenceTarget:
      title: RequestUpdateTrainedPokeDefenceTarget
      type: object
      properties:
        id:
          type: integer
          format: uint64
        trainedPokemonId:
          type: integer
          format: uint64
        moveId:
          type: integer
          format: uint64
        target:
          type: object
          properties:
            pokemonId:
              type: integer
              format: uint64
            nature:
              type: string
            effortValueA:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
            effortValueC:
              type: integer
              format: uint64
              minimum: 0
              maximum: 252
      required:
        - id
    RequestCalclateSingleDamage:
      description: ''
      type: object
      title: RequestCalclateSingleDamage
      properties:
        self:
          $ref: '#/components/schemas/RequestDamagePokemonAdjustment'
        moveId:
          type: integer
          format: uint64
        target:
          $ref: '#/components/schemas/RequestDamagePokemonAdjustment'
        battleFormat:
          type: string
          enum:
            - Single
            - Double
        side:
          type: string
          enum:
            - Attack
            - Defence
      required:
        - self
        - moveId
        - target
        - battleFormat
        - side
    RequestCalclateMultiDamages:
      description: ''
      type: object
      title: RequestCalclateMultiDamages
      properties:
        self:
          $ref: '#/components/schemas/RequestDamagePokemonAdjustment'
        moveId:
          type: integer
          format: uint64
        targets:
          type: array
          items:
            type: object
            properties:
              calcIndex:
                type: integer
                format: uint64
              target:
                $ref: '#/components/schemas/RequestDamagePokemonAdjustment'
            required:
              - calcIndex
              - target
        battleFormat:
          type: string
          enum:
            - Single
            - Double
        side:
          type: string
          enum:
            - Attack
            - Defence
      required:
        - self
        - moveId
        - targets
        - battleFormat
        - side
    RequestDamagePokemonAdjustment:
      description: ''
      type: object
      properties:
        pokemonId:
          type: integer
          format: uint64
        nature:
          type: string
        abilityId:
          type: integer
          format: uint64
        heldItemId:
          type: integer
          format: uint64
        effortValueH:
          type: integer
          format: uint64
          minimum: 0
          maximum: 252
        effortValueA:
          type: integer
          format: uint64
          minimum: 0
          maximum: 252
        effortValueB:
          type: integer
          format: uint64
          minimum: 0
          maximum: 252
        effortValueC:
          type: integer
          format: uint64
          minimum: 0
          maximum: 252
        effortValueD:
          type: integer
          format: uint64
          minimum: 0
          maximum: 252
      required:
        - pokemonId
    DamageResults:
      title: Damages
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              calcIndex:
                type: integer
                format: uint16
              damage:
                type: integer
                format: uint16
        count:
          type: integer
          format: uint16
        battleFormat:
          type: string
          enum:
            - Single
            - Double
    DamageResult:
      title: Damage
      type: object
      properties:
        damage:
          type: integer
          format: uint16
        battleFormat:
          type: string
          enum:
            - Single
            - Double
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '406':
      description: Not Accepable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '413':
      description: Payload Too Large
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '414':
      description: URI Too Long
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '415':
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    CreateBattleRecord:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCreateBattleRecord'
          examples: {}
        application/xml:
          schema:
            type: object
            properties: {}
      description: ''
    UpdateBattleRecord:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUpdateBattleRecord'
    CreateParty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCreateParty'
    UpdateParty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUpdateParty'
    CreateTrainedPokemon:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCreateTrainedPokemon'
    UpdateTrainedPokemon:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUpdateTrainedPokemon'
    CreateTrainedPokeAttackTarget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCreateTrainedPokeAttackTarget'
    UpdateTrainedPokeAttackTarget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUpdateTrainedPokeAttackTarget'
    CreateTrainedPokeDefenceTarget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCreateTrainedPokeDefenceTarget'
    UpdateTrainedPokeDefenceTarget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestUpdateTrainedPokeDefenceTarget'
    CalculateMultiDamages:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCalclateMultiDamages'
    CalculateSingleDamage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCalclateSingleDamage'
  parameters: {}
tags:
  - name: Pokemon Base Data
